Ex. No: 4 Interface Push button/Digital sensors (IR/LDR) with Raspberry Pi, write a
program to turn ON LED when push button is pressed or at sensor detection.
 The GPIO pins of the Raspberry Pi is an important feature as they enable the 
Raspberry Pi to interface with external Physical Components like LEDs, Motors, 
Buttons, etc.
 The GPIO Pins or General Purpose Input Output Pins, as the name suggests, can be 
configured as either Output Pin or an Input Pin.
 If it is setup as an Output Pin, the GPIO Pin drives an Output Device like an LED. On 
the contrary, if the GPIO Pin is configured as an Input Pin, it will read the incoming 
data from an external device, like a Button, in this scenario.
 From the above statements, it is clear that if the Raspberry Pi wants to read the value 
from an external device, the corresponding GPIO pin must be declared as an Input 
Pin.
 But when a GPIO Pin of the Raspberry Pi is declared as Input, it must be ‘tied’ to 
High or Low or else it is called as a Floating Input Pin. A Floating Input is a pin 
which is defined as input and left as it is.
 Any Digital Input Pin is very sensitive and catches even the slightest changes and will 
pick up the stray capacitances from your finger, breadboard, air etc.
 In order to avoid this, a Digital Input Pin must be tied to VCC or GND with the help 
of Pull-up or Pull-down resistors.
Basics of Push Button
 Push Button is simplest of devices and it is the basic input device that can be 
connected to any controller or processor like Arduino or Raspberry Pi.
 A push button in its simplest form consists of four terminals. In that, terminals 1 and
2 are internally connected with each other and so are terminals 3 and 4. 
Interfacing a Push Button with Raspberry Pi
 As mentioned in the “GPIO as Input” section, when a GPIO pin is declared as 
Input, it must be connected to VCC or GND with the help of either a Pull-up 
resistor or a Pull-down resistor.
 But, modern boards like Arduino and Raspberry Pi have a feature of Internal Pullup or Internal Pull-down. Using this feature, the Pin will be pulled-High or Low 
from the inside of the chip.
 While defining a GPIO pin of the Raspberry Pi as Input, add an additional 
statement in the program to activate the internal pull-up or pull-down.
Circuit Diagram
Components Required
 Raspberry Pi
 Push Button
 5mm LED
 100Ω Resistor (1/4 Watt)
 Mini Breadboard
 Connecting Wires
 Power Supply



Python Code:
import RPi.GPIO as GPIO
import time
button = 16
led = 18
def setup():
 GPIO.setmode(GPIO.BOARD)
 GPIO.setup(button, GPIO.IN, pull_up_down=GPIO.PUD_UP)
 GPIO.setup(led, GPIO.OUT)
def loop():
 while True:
 button_state = GPIO.input(button)
 if button_state == False:
 GPIO.output(led, True)
 print('Button Pressed...')
 while GPIO.input(button) == False:
 time.sleep(0.2)
 else:
 GPIO.output(led, False)
def endprogram():
 GPIO.output(led, False)
 GPIO.cleanup()
if __name__ == '__main__':
 
 setup()
 
 try:
 loop()
 
 except KeyboardInterrupt:
 print 'keyboard interrupt detected' 
 endprogram(
